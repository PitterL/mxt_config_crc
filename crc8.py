class MessageCrc(object):
    CRC_PLOY = 0x8c

    def __init__(self, data):
        self.__data = data

    def crc8(self, crc, val):
        for i in range(8):
            fb = (crc ^ val) & 0x01
            val >>= 1
            crc >>= 1
            if fb:
                crc ^= MessageCrc.CRC_PLOY

        return crc

    def calculate(self):
        data = self.__data
        crc = 0
        for i in range(len(data)):
            crc = self.crc8(crc, data[i])
            print(hex(crc))

        return crc

import array
if __name__ == "__main__":

    #data = array.array('B', [0x01, 0x9b, 0xa0, 0xa5, 0xaa, 0xaf, 0xb4, 0xb9, 0xcc])
    #data = [0x31, 0x91, 0x1a, 0x2, 0x99, 0x1, 0x88, 0x0, 0x0, 0x0]
    #data = [0x35, 0x91, 0x44, 0x1, 0xe7, 0x80, 0x3e, 0x0, 0x0, 0x0]
    #data = [0xc, 0x80, 0x20, 0x1a, 0xf0, 0x99, 0xb5, 0x0, 0x0, 0x0, 0x66]   #last byte is crc
    #data = [0x31, 0x91, 0x1a, 0x2, 0x99, 0x1, 0x88, 0x0, 0x0, 0x0]
    #data =[0x32, 0x91, 0xcb, 0x1, 0x6d, 0x1, 0x9a, 0x0, 0x0, 0x0] #0xc7
    #data = [0xc, 0x20, 0x13, 0x11, 0xd, 0x66, 0xaf, 0x0, 0x0, 0x0, 0xfb]
    #data = [0xc, 0xa0, 0x20, 0x11, 0x46, 0x66, 0xd7, 0x0, 0x0, 0x0]
    #data = [0xc, 0xa0, 0x20, 0x11, 0x46, 0x66, 0xd7, 0x0, 0x0, 0x0] #0xfb
    #data = [0x01, 0x00, 0x0c, 0x5d, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9d]
    #data = [0x31,0x09,0xd1,0x0a,0x91,0x0c,0xc9,0x0c,0xb9,0x0d]
    #data = [0x02, 0x42,0x05, 0x00,0,0,0,0,0,0]
    data = [0x32, 0x91, 0xa1, 0x80, 0x7f,0x1, 0x67,0,0,0]
    a = MessageCrc(data)
    print("Final CRC: {}".format(hex(a.calculate())))